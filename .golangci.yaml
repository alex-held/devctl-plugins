# This file contains all available configuration options
# with their default values.

# options for analysis running
run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # list of build tags, all linters use it. Default is empty list.
  build-tags:
    - codeanalysis
    - tools

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true

linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 90
    statements: 70
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style

  #    disabled-checks:
  #      - ifElseChain
  #      - commentedOutCode
  #      - octalLiteral
  #      - whyNoLint
  #      - wrapperFunc
  gocyclo:
    min-complexity: 10
  gocognit:
    min-complexity: 10
  nestif:
    min-complexity: 4

  goimports:
    local-prefixes: github.com/alex-held/devctl-plugins
  godox:
    keywords:
      - NOTE
      - TODO
      - BUG
      - BUG
      - OPTIMIZE
      - HACK

  golint:
    min-confidence: 0.8
  gomnd:
    settings:
      mnd:
        checks: [ argument,case,condition,operation,return,assign ]
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  gofmt:
    simplify: true
  nakedret:
    max-func-lines: 30
  lll:
    line-length: 120

  whitespace:
    auto-fix: true
  maligned:
    suggest-new: true
  misspell:
    locale: US
  godot:
    scope: declarations
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - golint
    - gomnd
    - goprintffuncname
    #- gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - scopelint
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    - gocognit
    - godox
    - maligned
    - nestif
    - asciicheck
    - funlen
    - gochecknoglobals
    - godot
    - goerr113
    - prealloc
    - testpackage
    - wsl

issues:
  exclude-rules:
    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    - path: _test\.go
      linters:
        - gocritic
        - dupl
  #        - lll
  fix: true
